name: Lint Code

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, review_requested, reopened]

jobs:
  cpp-linting:
    name: C++ Linting
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/nvidia/torch-tensorrt/docgen:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run image
        run: cp $GITHUB_WORKSPACE/docker/WORKSPACE.docs $GITHUB_WORKSPACE/WORKSPACE
      - name: Install dependencies
        run: pip3 install -r $GITHUB_WORKSPACE/.github/scripts/requirements.txt
      - name: Lint C++
        run: |
          ln -s $GITHUB_EVENT_PATH /GITHUB_EVENT.json
          python3 .github/scripts/run_cpp_linter.py
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  py-linting:
    name: Python Linting
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/nvidia/torch-tensorrt/docgen:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run image
        run: cp $GITHUB_WORKSPACE/docker/WORKSPACE.docs $GITHUB_WORKSPACE/WORKSPACE
      - name: Install dependencies
        run: |
          pip3 install -r $GITHUB_WORKSPACE/.github/scripts/requirements.txt
          pip3 install -r $GITHUB_WORKSPACE/tools/linter/requirements.txt
      - name: Lint python
        run: |
          ln -s $GITHUB_EVENT_PATH /GITHUB_EVENT.json
          python3 $GITHUB_WORKSPACE.github/scripts/run_py_linter.py
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
